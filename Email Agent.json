{
  "name": "Email Agent",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "YOU ARE **GMAIL-SIGNOFF-MAESTRO**, THE EXPERT AGENT RESPONSIBLE FOR ENSURING EVERY EMAIL AUTHORED BY “ABHAY KRISHNA” IS SENT CORRECTLY FROM `abhaykrishna280@gmail.com` AND ENDS WITH THE EXACT SIGN-OFF:\n\nBest regards,\nAbhay Krishna\n\n---\n\n### CORE DIRECTIVES ###\n- Always send emails from: **abhaykrishna280@gmail.com**\n- Detect if the author is “Abhay Krishna.”\n- Ensure the email body ends with the exact sign-off above.\n- If the sign-off already exists, do nothing.\n- Place the sign-off above quoted replies, signature delimiters (“-- ”), or auto-footers.\n- Preserve formatting, quoted text, and signatures.\n- Never use placeholders, never paraphrase the sign-off.\n\n---\n\n### TOOLS YOU CAN USE ###\n1) **gmail.getMessages({ messageId: string })**\n   - Returns a structured object:\n     {\n       \"from\": \"Abhay Krishna <abhaykrishna280@gmail.com>\",\n       \"to\": [\"Recipient Name <recipient@example.com>\"],\n       \"subject\": \"Subject text\",\n       \"date\": \"Mon, 28 Aug 2025 10:32:00 +0530\",\n       \"body\": {\n         \"plainText\": \"Message in plain text\",\n         \"html\": \"<div>Message in HTML</div>\"\n       },\n       \"quotedText\": \"On Mon, X wrote: ...\"\n     }\n\n2) **gmail.send({ to: string[], subject: string, body: { plainText?: string, html?: string } })**\n   - Sends the message **from abhaykrishna280@gmail.com**.\n   - The model is responsible for **predicting the email subject and body** based on the user’s request or intent.\n   - Always generate a clear, human-friendly subject line (short, professional).\n   - Always generate a polite, structured email body (salutation → context → request → thanks → sign-off).\n   - Always include the correct sign-off before sending.\n   - Prefer **HTML** with `<div>` and `<br>` for proper Gmail formatting.\n   - Example body.html generated by the model:\n     <div>Hi Renuka,</div>\n     <br>\n     <div>I hope you’re doing well.</div>\n     <br>\n     <div>I wanted to check in and see if it’s a good time for me to start working on the <b>Project Breadcrumb</b>. Please let me know if there are any prerequisites, timelines, or additional details I should be aware of before kicking things off.</div>\n     <br>\n     <div>Thanks a lot!</div>\n     <br>\n     <div>Best regards,<br>Abhay Krishna</div>\n---\n\n### OPERATIONAL FLOW ###\n1. Fetch draft/message with **gmail.getMessages**.\n2. Confirm the author is Abhay Krishna.\n3. If sign-off missing, append it above quoted text or signatures.\n4. Send via **gmail.send**, always using `abhaykrishna280@gmail.com` as the sender.\n5. Prefer HTML output to maintain formatting, but provide plainText fallback.\n\n---\n\n### WHAT NOT TO DO ###\n- Do NOT change the wording of the sign-off.\n- Do NOT add placeholders (like [Your Name]).\n- Do NOT duplicate the sign-off if already present.\n- Do NOT modify quoted history or other people’s signatures.\n- Do NOT send from any address other than **abhaykrishna280@gmail.com**."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -112,
        -64
      ],
      "id": "db06950a-5345-4b35-9ded-463578c6ee77",
      "name": "Email Agent"
    },
    {
      "parameters": {
        "model": "meta-llama/llama-4-maverick-17b-128e-instruct",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -176,
        160
      ],
      "id": "668145d2-4839-41bb-a3ca-e21141959a6c",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "dSwraQbCPXdSxRKY",
          "name": "Groq Model"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $fromAI(\"emailAddress\",\"The email address we're sending to.\") }}",
        "subject": "={{ $fromAI(\"subject\") }}",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "appendAttribution": false,
          "senderName": "Abhay Krishna"
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        -48,
        160
      ],
      "id": "97a609b8-d555-4e35-baab-3b7b3730e24a",
      "name": "Send Email",
      "webhookId": "5d3c1944-d325-4574-9e16-2397ee13269b",
      "credentials": {
        "gmailOAuth2": {
          "id": "m27S3wJf5UTQOPmQ",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -400,
        -64
      ],
      "id": "03f7e11f-3028-4445-8d11-5b4cf1985044",
      "name": "Run the agent"
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": "={{ $fromAI(\"limit\") }}",
        "simple": false,
        "filters": {
          "sender": "={{ $fromAI(\"senderEmail\") }}"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        80,
        160
      ],
      "id": "c6906be5-762a-4631-843c-f40d023101a9",
      "name": "Get Messages",
      "webhookId": "a4493177-cc9d-4380-974b-f61065e8f227",
      "credentials": {
        "gmailOAuth2": {
          "id": "m27S3wJf5UTQOPmQ",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "15e4fb2c-2eef-459d-b733-f5072515808c",
              "name": "response",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        288,
        -64
      ],
      "id": "d91dfd68-a325-42b5-b736-e416a0707d9d",
      "name": "Response"
    }
  ],
  "pinData": {
    "Run the agent": [
      {
        "json": {
          "query": "Can you send an email asking if I should make the meeting appointment on 31st August 2025 at 7pm IST for renukaunni11@gmail.com"
        }
      }
    ]
  },
  "connections": {
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Email Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Run the agent": {
      "main": [
        [
          {
            "node": "Email Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Messages": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Email Agent": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1e009148-de73-4b3d-a3b0-c7620e9c26a5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "aa103bfaf5fbbae38db6d08763542a38435378d8d32ed79c5ff3cdba5c2898b3"
  },
  "id": "BhzNDeGIT2oS2KJk",
  "tags": []
}